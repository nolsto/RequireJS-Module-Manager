var estraverse = require('estraverse');

exports.getFactoryNode = function (node) {
  var arg0, arg1;

  //Just the factory function passed to define
  arg0 = node.arguments[0];
  if (arg0 && arg0.type === estraverse.Syntax.FunctionExpression) {
    return arg0;
  }

  //A module array followed by the factory function.
  arg1 = node.arguments[1];
  if (arg0.type === estraverse.Syntax.ArrayExpression &&
      arg1 && arg1.type === estraverse.Syntax.FunctionExpression) {
    return arg1;
  }

  return null;
}

exports.getDepArrayNode = function (node) {
  var arg0 = node.arguments[0];
  if (arg0 && arg0.type === estraverse.Syntax.ArrayExpression) {
    return arg0;
  }

  return null;
}

exports.nodeContainsSelection = function (node, selection, ignoreQuotes) {
  var a = selection[0] - node.range[0]
    , b = node.range[1] - selection[1];

  if (ignoreQuotes && node.type === 'Literal') {
    return (a === 0 && b === 0) || (a === 1 && b === 1);
  }
  return a === 0 && b === 0;
}
